name: Build Debian RootFS

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest
        platforms: all

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Debian RootFS
      run: |
        # Create directories
        mkdir -p rootfs
        cd rootfs

        # Debootstrap Debian
        sudo apt-get update
        sudo apt-get install -y debootstrap
        sudo debootstrap --arch=amd64 buster ./rootfs http://deb.debian.org/debian/

        # Copy init script
        cp ../init ./rootfs/init

        # Compress rootfs
        sudo tar -czvf ../debian-rootfs.tar.gz -C ./rootfs .

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: debian-rootfs
        path: debian-rootfs.tar.gz

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./debian-rootfs.tar.gz
        asset_name: debian-rootfs.tar.gz
        asset_content_type: application/gzip
